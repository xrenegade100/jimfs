/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 09 13:43:31 GMT 2023
 */

package com.google.common.jimfs;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.jimfs.Configuration;
import com.google.common.jimfs.Jimfs;
import com.google.common.jimfs.PathType;
import com.google.common.jimfs.WindowsPathType;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Jimfs_ESTest extends Jimfs_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      Configuration configuration0 = Configuration.forCurrentPlatform();
      configuration0.toBuilder();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem(uRI0, configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = "fileSystem";
      WindowsPathType windowsPathType0 = WindowsPathType.INSTANCE;
      Configuration.builder(windowsPathType0);
      Configuration configuration0 = Configuration.windows();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem(configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem((URI) null, configuration0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      URI uRI0 = MockURI.aFileURI;
      Configuration configuration0 = Configuration.forCurrentPlatform();
      configuration0.toBuilder();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem(uRI0, configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Configuration configuration0 = Configuration.windows();
      PathType pathType0 = PathType.windows();
      Configuration.builder(pathType0);
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("x", configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("http", (Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("cguvl", configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      configuration0.toBuilder();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("?V]09eNop]", configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PathType pathType0 = PathType.windows();
      Configuration.builder(pathType0);
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("x");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("~3xHZeDq<@KunO");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.net.URISyntaxException: Illegal character in authority at index 8: jimfs://~3xHZeDq<@KunO
         //
         verifyException("com.google.common.jimfs.Jimfs", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem((Configuration) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.jimfs.PathService", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Configuration configuration0 = Configuration.osX();
      configuration0.toBuilder();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("fileSystem");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem("!", (Configuration) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // java.net.URISyntaxException: Illegal character in hostname at index 8: jimfs://!
         //
         verifyException("com.google.common.jimfs.Jimfs", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      URI uRI0 = MockURI.aFTPURI;
      Configuration configuration0 = Configuration.forCurrentPlatform();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem(uRI0, configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Configuration configuration0 = Configuration.forCurrentPlatform();
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem(configuration0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Jimfs.newFileSystem();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no provider found for attribute view 'basic'
         //
         verifyException("com.google.common.jimfs.AttributeService", e);
      }
  }
}
